@model TestDA.Areas.Manager.Models.ViewModel.NhomThucPhamData
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Manager/Views/Shared/_AdminPartial.cshtml";
}

<section class="content-header">
    <h1>
        <i class="fa fa-list"></i>
        Danh mục nhóm thực phẩm
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Trang chủ</a></li>
        <li class="active">Danh mục</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="container body-content">
        <div class="col-md-6">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                if (@TempData["Success"] != null)
                {
                    <div class="add-sucess">
                        <script>
                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": false,
                                "positionClass": "toast-bottom-right",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            };
                            toastr["success"]("Thêm mới thành công");
                        </script>
                    </div>
                }
                <div class="">
                    <h4>Thêm mới một nhóm thực phẩm</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.tenNhomThucPham)
                        @Html.EditorFor(model => model.tenNhomThucPham, new { htmlAttributes = new { @class = "form-control", @id = "name-group" } })
                        <span>Đặt tên nhóm thực phẩm sử dụng.</span><br />
                        @Html.ValidationMessageFor(model => model.tenNhomThucPham, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ghiChu)
                        @Html.TextAreaFor(model => model.ghiChu, new { @class = "form-control", @id = "ckeContent", @rows = 8 })
                        @*<script type="text/javascript"> CKEDITOR.replace('ckeContent', { customConfig: '/Scripts/ckeditor/config.js', height: 200, }); </script>*@
                        @Html.ValidationMessageFor(model => model.ghiChu, null, new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="add-button">
                            <input type="submit" value="Thêm mới nhóm thực phẩm" class="btn btn-default btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6  list-group-news">
            <h4>Danh sách nhóm thực phẩm</h4>
            <span class="alert-success" id="success"></span>
            <div class="form-search">
                @using (Html.BeginForm("Index", "NhomThucPham", FormMethod.Get, new { @class = "form-inline", role = "search", id = "search-form", onsubmit = "return empty();" }))
                {

                    <div class="" style="margin:10px;">
                        <div class="form-group">
                            <input type="text" class="form-control" placeholder="Nhập thông tin cần tìm...." name="tukhoa" value="@ViewBag.TuKhoaTK" id="search-box" style="width:200px;">
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-default btn-default hidden-xs"><i class="glyphicon glyphicon-search"></i></button>
                        </div>
                        @*<br /><span>(Tìm kiếm thông tin theo tên danh mục.)</span>*@
                        <div class="form-group pull-right">
                            @Html.Raw("<span class='pull-right'> Tổng số bản ghi là: " + Model.danhSachNhomTP.Count().ToString() + "</span>")
                        </div>
                    </div>
                    
                }
            </div>
            <table class="table table-bordered table-hover" id="dsNhomTP">
                <thead>
                    <tr>
                        <th>Tên danh mục</th>
                        <th>Ghi chú</th>
                        <th>Chức năng</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.danhSachNhomTP.Count > 0)
                        {
                            //int j = 0;
                            foreach (var i in Model.danhSachNhomTP)
                            {
                                // j++;
                                <tr>
                                    @*<td>@j.ToString()</td>*@
                                    <td>@Html.DisplayFor(m => i.tenNhomThucPham)</td>
                                    <td> @Html.DisplayFor(m => i.ghiChu)</td>
                                    <td class="chuc-nang">
                                        <a href="javascript:void(0)" class="lnkEdit" data-value="@i.maNhomTP" id="nhomtp_@i.maNhomTP">Sửa | </a>
                                        <a href="javascript:void(0)" class="lnkDelete" data-value="@i.maNhomTP" id="group_@i.maNhomTP">Xóa</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4"> <p style="text-align:center;">Không có bản ghi nào</p></td>
                            </tr>
                        }

                    }
                </tbody>
            </table>
            @*chỉnh sửa nhóm thực phẩm*@
            <div id="openModal" style="display:none">

                <input type="hidden" id="maNhomTP" />
                <div class="form-group">
                    @Html.LabelFor(model => model.tenNhomThucPham)
                    @Html.EditorFor(model => model.tenNhomThucPham, new { htmlAttributes = new { @class = "form-control", @id = "nhomThucPham" } })
                    <span>Đặt tên nhóm thực phẩm sử dụng.<br /></span>
                    <p class="text-danger" id="sumValidate"></p>
                    @Html.ValidationMessageFor(model => model.tenNhomThucPham, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ghiChu)
                    @Html.TextAreaFor(model => model.ghiChu, new { @class = "form-control", @id = "ckeContentSua", @rows = 5 })
                    @*<script type="text/javascript"> CKEDITOR.replace('ckeContentSua', { customConfig: '/Scripts/ckeditor/config.js', }); </script>*@
                    @Html.ValidationMessageFor(model => model.ghiChu, null, new { @class = "text-danger" })
                </div>
            </div>
            @*kết thúc chỉnh sửa nhóm thực phẩm*@
        </div>
    </div>
</section>

@section Scripts
{
    @*add checkeditor*@
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    @*add ckfinder*@
    <script src="~/Scripts/ckfinder/ckfinder.js"></script>
    @*xóa bỏ một danh mục nhóm tin*@
    <script type="text/javascript">
        $(function () {
            //Xóa một bản ghi
            $("a.lnkDelete").on("click", function () {
                var id = $(this).data('value');//lấy giá trị id của bản ghi
                var $tr = $(this).closest('tr');
                var answer = confirm("Bạn có chắc chắn xóa nhóm tin là " + id + " . Tiếp tục?");
                if (answer)
                    //DeleteCategory(id);
                    $.ajax({
                        type: "POST",
                        url: "@(Url.Action("XoaNhomTP", "NhomThucPham"))",
                        data: { maNhom: id },
                        success: function (data) {
                            if (data == "0") {
                                $tr.css("background-color", "#ec645e");
                                $tr.fadeOut(1600, "linear", function () { $tr.remove(); });
                                toastr.options = {
                                    "closeButton": true,
                                    "debug": false,
                                    "newestOnTop": false,
                                    "progressBar": false,
                                    "positionClass": "toast-bottom-right",
                                    "preventDuplicates": false,
                                    "onclick": null,
                                    "showDuration": "300",
                                    "hideDuration": "1000",
                                    "timeOut": "5000",
                                    "extendedTimeOut": "1000",
                                    "showEasing": "swing",
                                    "hideEasing": "linear",
                                    "showMethod": "fadeIn",
                                    "hideMethod": "fadeOut"
                                };
                                toastr["success"]("Xóa bản ghi thành công");
                                location.reload();
                            } else {
                                alert("Nhóm thực phẩm đã chọn có chứa thực phẩm trong bảng khác. Hãy xóa thực phẩm của nhóm thực phẩm này trước!");
                            }
                        },
                        error: function (error) {
                        }
                    });
                return false;
            });
            //chỉnh sửa danh mục nhóm tin
            $("a.lnkEdit").click(function () {
                var myModal = $('#openModal');
                //clear validate
                $(".text-danger").hide();
                // get the values from the table
                var a = $("#nhomThucPham").val($(this).closest('tr').children()[0].textContent);
                var b = $("#ckeContentSua").val($(this).closest('tr').children()[1].textContent);
                console.log(a.val());
                //lấy id của danh mục nhóm tin
                var id = $(this).data('value');
                console.log(id);
                $('#maNhomTP', myModal).val(id);
                $('#nhomThucPham', myModal).val(a.val());
                $('#ckeContentSua', myModal).val(b.val());
                //lấy hàng trong bảng dữ liệu
                var $tr = $(this).closest('tr');
                //call modal
                $("#openModal").dialog({
                    autoOpen: false,
                    title: 'Chỉnh sửa nhóm thực phẩm',
                    modal: true,
                    width: 500,
                    //create: function (event, ui) {
                    //    var widget = $(this).dialog("widget");
                    //    $(".ui-dialog-titlebar-close span", widget).removeClass("ui-icon-closethick").addClass("ui-icon-minusthick");
                    //},
                    dialogClass: 'mod-no-close',
                    buttons: {
                        Save: function () {
                            var maNhomTP = $("#maNhomTP").val().trim();
                            var tenNhomTP = $("#nhomThucPham").val().trim();
                            var ghiChu = $("#ckeContentSua").val().trim();
                            if (tenNhomTP == null || tenNhomTP == "") {
                                $('#sumValidate').html("Tên thực phẩm không bỏ trống.");
                                $('#sumValidate').css("display", "block");
                                return false;
                            }
                            else if (tenNhomTP.length>100) {
                                $('#sumValidate').html("Chiều dài không quá 150 kí tự.");
                                $('#sumValidate').css("display", "block");
                                return false;
                            }
                            else {
                                $.ajax({
                                    type: "POST",
                                    url: "@(Url.Action("SuaNhomTP", "NhomThucPham"))",
                                    data: { maNhomTP: maNhomTP, tenNhomTP: tenNhomTP, ghiChu: ghiChu },
                                    success: function (data) {
                                        //$('#success').html(data);
                                        $tr.css({
                                            "border-color": "#ec645e",
                                            "border-width": "1px",
                                            "border-style": "solid"
                                        });
                                        $tr.fadeOut(1600, "linear");
                                        toastr.options = {
                                            "closeButton": true,
                                            "debug": false,
                                            "newestOnTop": false,
                                            "progressBar": false,
                                            "positionClass": "toast-bottom-right",
                                            "preventDuplicates": false,
                                            "onclick": null,
                                            "showDuration": "300",
                                            "hideDuration": "1000",
                                            "timeOut": "5000",
                                            "extendedTimeOut": "1000",
                                            "showEasing": "swing",
                                            "hideEasing": "linear",
                                            "showMethod": "fadeIn",
                                            "hideMethod": "fadeOut"
                                        };
                                        toastr["success"]("Sửa thông tin thành công");
                                        location.reload();
                                    },
                                    error: function (error) {
                                    }
                                });
                            }
                            $(this).dialog("destroy");
                        },
                        Cancel: function () { $(this).dialog("destroy"); }
                    }
                });
                $("#openModal").dialog("open");
                // myModal.modal({ width: 500, show: true });
            });/////edn modal

        });
    </script>
    <script>
        function empty() {
            var x = $('#search-box').val();
            //xóa bor validate
            $(".has-error").hide();
            $(".text-danger").hide();
            if (x == " " || x == null) {
                var url = window.location.pathname;
                window.location(url);
                // return false;
            }
        }
    </script>
}